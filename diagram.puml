@startuml
!theme toy

frame workernodes as "Worker nodes"{
node server1 as "server1.vorozoco.local"{

package Deployment {


     component rs as "ReplicaSet"{
    
        component pod1

        component pod2 

        component pod3 as "pod..."

        
    }

    database PersistentVolume as "PersistentVolume"
}

boundary service as "service <<network lb>>"

component kubeproxy1 as "kube-proxy <<pod>>"

component kubelet
}

node server2 as "server2.vorozoco.local"{
    label "proxy, pods and services ..."
}

node servern as "server...vorozoco.local"{
    label "pods and services ..."
}
service ..> pod1
service ..> pod2
service ..> pod3

pod1 ..> PersistentVolume
pod2 ..> PersistentVolume
pod3 ..> PersistentVolume

kubeproxy1 ..> service

}


frame controlplane as "Control plane"{
    node cp1 as "cp1.vorozoco.local"{
        component API as "Api Server"

        component Scheduler
        component Etcd 
        component "Controllers"
        
    }

    node cp2 as "cp2.vorozoco.local"

    node cp3 as "cp3.vorozoco.local"
}

actor SRE

actor user

node loadbalancer as "lb.vorozco.local <<HAProxy>>"

node cploadbalancer as "cplb.vorozco.local <<HAProxy>>"


kubelet ...... cploadbalancer

SRE .. cploadbalancer

loadbalancer --down--> server1
loadbalancer --down--> server2
loadbalancer --down--> servern

cploadbalancer --up--> cp1
cploadbalancer --up--> cp2
cploadbalancer --up--> cp3

user -- loadbalancer
@enduml
